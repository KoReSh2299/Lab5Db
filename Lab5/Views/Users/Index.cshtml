@model Kursach.Domain.Utilities.PaginatedList<Kursach.Domain.Entities.User>

<h2>Пользователи</h2>
<a class="btn btn-success mb-3" asp-action="Create">Добавить нового пользователя</a>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Имя пользователя</th>
            <th>Хэш пароля</th>
            <th>Соль пароля</th>
            <th>Роль</th>
            <th>Дата создания</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Username</td>
                <td title="@BitConverter.ToString(user.PasswordHash).Replace("-", "")">@BitConverter.ToString(user.PasswordHash).Replace("-", "")</td>
                <td title="@BitConverter.ToString(user.PasswordHash).Replace("-", "")">@BitConverter.ToString(user.PasswordSalt).Replace("-", "")</td>
                <td>@user.Role</td>
                <td>@user.CreatedAt.ToLongDateString()</td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@user.Id">Изменить</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@user.Id">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<nav>
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
            </li>
        }

        <!-- Логика для отображения части страниц -->
        @{
            int maxPagesToShow = 15; // Общее количество отображаемых страниц
            int halfWindow = maxPagesToShow / 2;
            int startPage = Math.Max(1, Model.PageIndex - halfWindow);
            int endPage = Math.Min(Model.TotalPagesCount, Model.PageIndex + halfWindow);

            if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="1">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }

            for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@i">@i</a>
                </li>
            }

            if (endPage < Model.TotalPagesCount)
            {
                @if (endPage < Model.TotalPagesCount - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.TotalPagesCount)">@Model.TotalPagesCount</a>
                </li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
            </li>
        }
    </ul>
</nav>
